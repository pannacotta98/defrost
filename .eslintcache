[{"/Users/pannacotta/Dev/freezer/src/index.tsx":"1","/Users/pannacotta/Dev/freezer/src/reportWebVitals.ts":"2","/Users/pannacotta/Dev/freezer/src/App.tsx":"3","/Users/pannacotta/Dev/freezer/src/components/Nav.tsx":"4","/Users/pannacotta/Dev/freezer/src/other/firebase.tsx":"5","/Users/pannacotta/Dev/freezer/src/components/SignIn.tsx":"6","/Users/pannacotta/Dev/freezer/src/components/ItemList.tsx":"7","/Users/pannacotta/Dev/freezer/src/components/SignOut.tsx":"8","/Users/pannacotta/Dev/freezer/src/components/CreateList.tsx":"9","/Users/pannacotta/Dev/freezer/src/firebaseConfig.tsx":"10","/Users/pannacotta/Dev/freezer/src/components/SetItem.tsx":"11","/Users/pannacotta/Dev/freezer/src/components/ListItem.tsx":"12","/Users/pannacotta/Dev/freezer/src/other/GroceryItem.tsx":"13","/Users/pannacotta/Dev/freezer/src/other/util.tsx":"14","/Users/pannacotta/Dev/freezer/src/other/sortingFunctions.tsx":"15","/Users/pannacotta/Dev/freezer/src/components/AccountInfo.tsx":"16"},{"size":478,"mtime":1625759122510,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1616265246345,"results":"19","hashOfConfig":"18"},{"size":1047,"mtime":1616941102779,"results":"20","hashOfConfig":"18"},{"size":3737,"mtime":1625760783457,"results":"21","hashOfConfig":"18"},{"size":417,"mtime":1616430666966,"results":"22","hashOfConfig":"18"},{"size":2018,"mtime":1624636400485,"results":"23","hashOfConfig":"18"},{"size":3261,"mtime":1616844496743,"results":"24","hashOfConfig":"18"},{"size":461,"mtime":1616768396380,"results":"25","hashOfConfig":"18"},{"size":7508,"mtime":1616265246344,"results":"26","hashOfConfig":"18"},{"size":412,"mtime":1616839607045,"results":"27","hashOfConfig":"18"},{"size":6799,"mtime":1624706917348,"results":"28","hashOfConfig":"18"},{"size":3260,"mtime":1624705861632,"results":"29","hashOfConfig":"18"},{"size":348,"mtime":1616265246345,"results":"30","hashOfConfig":"18"},{"size":1673,"mtime":1616712594502,"results":"31","hashOfConfig":"18"},{"size":525,"mtime":1616839283523,"results":"32","hashOfConfig":"18"},{"size":533,"mtime":1625760610514,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"147qfba",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pannacotta/Dev/freezer/src/index.tsx",[],"/Users/pannacotta/Dev/freezer/src/reportWebVitals.ts",[],["69","70"],"/Users/pannacotta/Dev/freezer/src/App.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/Nav.tsx",[],"/Users/pannacotta/Dev/freezer/src/other/firebase.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/SignIn.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/ItemList.tsx",["71","72"],"import { faFilter, faPlus, faSortAmountUpAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState } from 'react';\nimport serverTypes from '../other/serverTypes';\nimport ListItem from './ListItem';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { firestore } from '../other/firebase';\nimport SetItem from './SetItem';\nimport { sortingFunctions } from '../other/sortingFunctions';\n\ninterface Props {\n  activeList: serverTypes.List;\n  user: serverTypes.User;\n}\n\nconst ItemList: React.FC<Props> = ({ activeList, user }) => {\n  // The item currently open in modal, 'closed' if none, or 'new' if adding item\n  const [itemModal, setItemModal] = useState<serverTypes.Item | 'new' | 'closed'>('closed');\n\n  const listQuery = firestore.collection('itemLists').doc(activeList.id).collection('items');\n  let [items, isLoading, error] = useCollectionData<serverTypes.Item>(listQuery, { idField: 'id' });\n  if (!items) items = [];\n\n  const filterCondition = () => true;\n  const sortCondition = sortingFunctions.get('oldest first');\n\n  const filteredAndSortedItems = items.filter(filterCondition).sort(sortCondition);\n\n  return (\n    <div className=\"has-navbar-fixed-bottom\">\n      {/* TODO The layout here is very hacky */}\n      <div className=\"columns mb-6\" style={{ marginTop: '-3rem' }}>\n        {isLoading ? (\n          <div className=\"loader-wrapper is-active\">\n            <div className=\"loader is-loading\"></div>\n          </div>\n        ) : error ? (\n          <div>\n            <h2 className=\"subtitle has-text-centered pt-6 has-text-danger\">An error occured</h2>\n            <p className=\"has-text-centered has-text-danger\">{error.message}</p>\n          </div>\n        ) : items.length < 1 ? (\n          <h2 className=\"subtitle has-text-centered pt-6\">The list is empty</h2>\n        ) : filteredAndSortedItems.length < 1 ? (\n          <h2 className=\"subtitle has-text-centered pt-6\">No item matches the current filter</h2>\n        ) : (\n          filteredAndSortedItems.map((item, idx) => (\n            <ListItem list={activeList} item={item} key={idx} onPress={setItemModal} /> // TODO Use id instead of index probably\n          ))\n        )}\n      </div>\n      <div className=\"navbar is-fixed-bottom is-primary columns is-mobile has-dropdown has-dropdown-up mb-0\">\n        {/* <button className=\"button is-multiline is-primary navbar-item column\">\n          <FontAwesomeIcon icon={faFilter} />\n          <p>Filter</p>\n        </button> */}\n        {/* <button className=\"button is-multiline is-primary navbar-item column\">\n          <FontAwesomeIcon icon={faSortAmountUpAlt} />\n          <p>Sort</p>\n        </button> */}\n        <button\n          onClick={() => setItemModal('new')}\n          className=\"button is-multiline is-primary navbar-item column\"\n        >\n          <FontAwesomeIcon icon={faPlus} />\n          <p>Add item</p>\n        </button>\n      </div>\n\n      {itemModal !== 'closed' && (\n        <SetItem\n          list={activeList}\n          closeModal={() => setItemModal('closed')}\n          selectedItem={itemModal === 'new' ? null : itemModal}\n          user={user}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ItemList;\n","/Users/pannacotta/Dev/freezer/src/components/SignOut.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/CreateList.tsx",[],"/Users/pannacotta/Dev/freezer/src/firebaseConfig.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/SetItem.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/ListItem.tsx",["73"],"import React from 'react';\nimport { dayDiff } from '../other/util';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport serverTypes from '../other/serverTypes';\nimport { firebase, firestore } from '../other/firebase';\nimport _ from 'lodash';\n\n// How many days before expiration date to have warning color\nconst WARNING_THRES = 7;\n\nconst ExpText: React.FC<{ expDate: firebase.firestore.Timestamp | null }> = ({ expDate }) => {\n  if (expDate === null) {\n    return <p>No expiration date</p>;\n  } else {\n    const expiresInDays = dayDiff(new Date(), expDate.toDate());\n\n    if (expiresInDays === 0) {\n      return (\n        <p className=\"has-text-warning-dark\">\n          <FontAwesomeIcon icon={faExclamationCircle} /> Expires today\n        </p>\n      );\n    } else if (expiresInDays < 0) {\n      return (\n        <p className=\"has-text-danger\">\n          <FontAwesomeIcon icon={faTimes} /> Expired {-expiresInDays} days ago\n        </p>\n      );\n    } else {\n      return (\n        <p className={expiresInDays < WARNING_THRES ? 'has-text-warning-dark' : ''}>\n          {expiresInDays < WARNING_THRES && <FontAwesomeIcon icon={faExclamationCircle} />} Expires\n          in {expiresInDays} days\n        </p>\n      );\n    }\n  }\n};\n\ninterface Props {\n  list: serverTypes.List;\n  item: serverTypes.Item;\n  onPress: (item: serverTypes.Item) => void;\n}\n\nconst ListItem: React.FC<Props> = ({ item, onPress, list }) => {\n  return (\n    <div className=\"panel-block columns is-mobile\" onClick={() => onPress(item)}>\n      <div className=\"column\">\n        <h2 className=\"is-size-5\">{item.name}</h2>\n        <ExpText expDate={item.expiresBy} />\n      </div>\n      <div className=\"column is-narrow\">\n        <div className=\"field is-grouped\">\n          {/* <p className=\"control\">\n            <button className=\"button is-primary\">&minus;</button>\n          </p> */}\n          <p className=\"control\">\n            <button\n              type=\"button\"\n              onClick={(event) => {\n                event.stopPropagation();\n                if (!window.confirm(`Are you sure you want to remove “${item.name}”?`)) {\n                  return;\n                }\n                firestore\n                  .collection('itemLists')\n                  .doc(list.id)\n                  .collection('items')\n                  .doc(item.id)\n                  .delete()\n                  .then(() => {\n                    console.log('Removed item', item);\n                    // TODO Code below to use for undo functionality maybe\n                    // const idStrippedItem = _.cloneDeep(item);\n                    // delete idStrippedItem.id;\n                    // firestore\n                    //   .collection('itemLists')\n                    //   .doc(list.id)\n                    //   .collection('items')\n                    //   .add(idStrippedItem);\n                  })\n                  .catch((error) => alert(`Could not delete item — ${error.message}`));\n              }}\n              className=\"button is-primary\"\n            >\n              &times;\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListItem;\n","/Users/pannacotta/Dev/freezer/src/other/GroceryItem.tsx",[],"/Users/pannacotta/Dev/freezer/src/other/util.tsx",[],"/Users/pannacotta/Dev/freezer/src/other/sortingFunctions.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/AccountInfo.tsx",["74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":45},{"ruleId":"79","severity":1,"message":"84","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":9},{"ruleId":"79","severity":1,"message":"85","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":19},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"@typescript-eslint/no-unused-vars","'faFilter' is defined but never used.","Identifier","unusedVar","'faSortAmountUpAlt' is defined but never used.","'_' is defined but never used.","'serverTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]