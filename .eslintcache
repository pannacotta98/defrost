[{"/Users/pannacotta/Dev/freezer/src/index.tsx":"1","/Users/pannacotta/Dev/freezer/src/reportWebVitals.ts":"2","/Users/pannacotta/Dev/freezer/src/App.tsx":"3","/Users/pannacotta/Dev/freezer/src/components/Nav.tsx":"4","/Users/pannacotta/Dev/freezer/src/other/firebase.tsx":"5","/Users/pannacotta/Dev/freezer/src/components/SignIn.tsx":"6","/Users/pannacotta/Dev/freezer/src/components/ItemList.tsx":"7","/Users/pannacotta/Dev/freezer/src/components/SignOut.tsx":"8","/Users/pannacotta/Dev/freezer/src/components/CreateList.tsx":"9","/Users/pannacotta/Dev/freezer/src/firebaseConfig.tsx":"10","/Users/pannacotta/Dev/freezer/src/components/SetItem.tsx":"11","/Users/pannacotta/Dev/freezer/src/components/ListItem.tsx":"12","/Users/pannacotta/Dev/freezer/src/other/GroceryItem.tsx":"13","/Users/pannacotta/Dev/freezer/src/other/util.tsx":"14","/Users/pannacotta/Dev/freezer/src/other/sortingFunctions.tsx":"15"},{"size":478,"mtime":1616433090461,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1616265246345,"results":"18","hashOfConfig":"17"},{"size":1047,"mtime":1616941102779,"results":"19","hashOfConfig":"17"},{"size":4081,"mtime":1624635314112,"results":"20","hashOfConfig":"17"},{"size":417,"mtime":1616430666966,"results":"21","hashOfConfig":"17"},{"size":2018,"mtime":1624636400485,"results":"22","hashOfConfig":"17"},{"size":3261,"mtime":1616844496743,"results":"23","hashOfConfig":"17"},{"size":461,"mtime":1616768396380,"results":"24","hashOfConfig":"17"},{"size":7508,"mtime":1616265246344,"results":"25","hashOfConfig":"17"},{"size":412,"mtime":1616839607045,"results":"26","hashOfConfig":"17"},{"size":6799,"mtime":1624706917348,"results":"27","hashOfConfig":"17"},{"size":3260,"mtime":1624705861632,"results":"28","hashOfConfig":"17"},{"size":348,"mtime":1616265246345,"results":"29","hashOfConfig":"17"},{"size":1673,"mtime":1616712594502,"results":"30","hashOfConfig":"17"},{"size":525,"mtime":1616839283523,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"147qfba",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/pannacotta/Dev/freezer/src/index.tsx",[],["64","65"],"/Users/pannacotta/Dev/freezer/src/reportWebVitals.ts",[],"/Users/pannacotta/Dev/freezer/src/App.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/Nav.tsx",[],"/Users/pannacotta/Dev/freezer/src/other/firebase.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/SignIn.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/ItemList.tsx",["66","67"],"import { faFilter, faPlus, faSortAmountUpAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState } from 'react';\nimport serverTypes from '../other/serverTypes';\nimport ListItem from './ListItem';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { firestore } from '../other/firebase';\nimport SetItem from './SetItem';\nimport { sortingFunctions } from '../other/sortingFunctions';\n\ninterface Props {\n  activeList: serverTypes.List;\n  user: serverTypes.User;\n}\n\nconst ItemList: React.FC<Props> = ({ activeList, user }) => {\n  // The item currently open in modal, 'closed' if none, or 'new' if adding item\n  const [itemModal, setItemModal] = useState<serverTypes.Item | 'new' | 'closed'>('closed');\n\n  const listQuery = firestore.collection('itemLists').doc(activeList.id).collection('items');\n  let [items, isLoading, error] = useCollectionData<serverTypes.Item>(listQuery, { idField: 'id' });\n  if (!items) items = [];\n\n  const filterCondition = () => true;\n  const sortCondition = sortingFunctions.get('oldest first');\n\n  const filteredAndSortedItems = items.filter(filterCondition).sort(sortCondition);\n\n  return (\n    <div className=\"has-navbar-fixed-bottom\">\n      {/* TODO The layout here is very hacky */}\n      <div className=\"columns mb-6\" style={{ marginTop: '-3rem' }}>\n        {isLoading ? (\n          <div className=\"loader-wrapper is-active\">\n            <div className=\"loader is-loading\"></div>\n          </div>\n        ) : error ? (\n          <div>\n            <h2 className=\"subtitle has-text-centered pt-6 has-text-danger\">An error occured</h2>\n            <p className=\"has-text-centered has-text-danger\">{error.message}</p>\n          </div>\n        ) : items.length < 1 ? (\n          <h2 className=\"subtitle has-text-centered pt-6\">The list is empty</h2>\n        ) : filteredAndSortedItems.length < 1 ? (\n          <h2 className=\"subtitle has-text-centered pt-6\">No item matches the current filter</h2>\n        ) : (\n          filteredAndSortedItems.map((item, idx) => (\n            <ListItem list={activeList} item={item} key={idx} onPress={setItemModal} /> // TODO Use id instead of index probably\n          ))\n        )}\n      </div>\n      <div className=\"navbar is-fixed-bottom is-primary columns is-mobile has-dropdown has-dropdown-up mb-0\">\n        {/* <button className=\"button is-multiline is-primary navbar-item column\">\n          <FontAwesomeIcon icon={faFilter} />\n          <p>Filter</p>\n        </button> */}\n        {/* <button className=\"button is-multiline is-primary navbar-item column\">\n          <FontAwesomeIcon icon={faSortAmountUpAlt} />\n          <p>Sort</p>\n        </button> */}\n        <button\n          onClick={() => setItemModal('new')}\n          className=\"button is-multiline is-primary navbar-item column\"\n        >\n          <FontAwesomeIcon icon={faPlus} />\n          <p>Add item</p>\n        </button>\n      </div>\n\n      {itemModal !== 'closed' && (\n        <SetItem\n          list={activeList}\n          closeModal={() => setItemModal('closed')}\n          selectedItem={itemModal === 'new' ? null : itemModal}\n          user={user}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ItemList;\n","/Users/pannacotta/Dev/freezer/src/components/SignOut.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/CreateList.tsx",[],"/Users/pannacotta/Dev/freezer/src/firebaseConfig.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/SetItem.tsx",[],"/Users/pannacotta/Dev/freezer/src/components/ListItem.tsx",["68"],"/Users/pannacotta/Dev/freezer/src/other/GroceryItem.tsx",[],"/Users/pannacotta/Dev/freezer/src/other/util.tsx",[],"/Users/pannacotta/Dev/freezer/src/other/sortingFunctions.tsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":18},{"ruleId":"73","severity":1,"message":"77","line":1,"column":28,"nodeType":"75","messageId":"76","endLine":1,"endColumn":45},{"ruleId":"73","severity":1,"message":"78","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":9},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'faFilter' is defined but never used.","Identifier","unusedVar","'faSortAmountUpAlt' is defined but never used.","'_' is defined but never used.","no-global-assign","no-unsafe-negation"]